{"version":3,"sources":["images/clover_icon.svg","images/bird_icon.svg","images/error_icon.svg","images/success_icon.svg","images/warning_icon.svg","faucet/faucet.js","index.js"],"names":["Faucet","useState","open","setOpen","message","setMessage","statusIcon","setStatusIcon","address","tweetUrl","setTweetUrl","loading","setLoading","tweetRegex","extractTweetId","text","length","match","getCLV","a","fetch","method","body","JSON","stringify","tweetId","headers","response","ok","SuccessIcon","json","res","type","WarningIcon","ErrorIcon","className","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","width","height","src","alt","CloverIcon","CircularProgress","color","placeholder","value","onChange","e","target","onClick","textTemplate","query","composeTweetLink","window","BirdIcon","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAAe,G,MAAA,IAA0B,yCCA1B,MAA0B,sCCA1B,MAA0B,uCCA1B,MAA0B,yCCA1B,MAA0B,yC,uBCoI1BA,MA1Hf,WAAmB,IAAD,EACUC,oBAAS,GADnB,mBACPC,EADO,KACDC,EADC,OAEgBF,mBAAS,IAFzB,mBAEPG,EAFO,KAEEC,EAFF,OAGsBJ,mBAAS,IAH/B,mBAGPK,EAHO,KAGKC,EAHL,OAIgBN,mBAAS,8CAJzB,mBAIPO,EAJO,aAKkBP,mBAAS,KAL3B,mBAKPQ,EALO,KAKGC,EALH,OAMgBT,oBAAS,GANzB,mBAMPU,EANO,KAMEC,EANF,KA4BRC,EAAa,uEAEnB,SAASC,EAAeC,GACpB,IAAKA,GAAwB,IAAhBA,EAAKC,OACd,MAAO,GAEX,IAAMC,EAAQF,EAAKE,MAAMJ,GACzB,OAAII,GAASA,EAAM,GAAGD,OAAQ,EACnBC,EAAM,GAEV,GAGX,IAAMC,EAAM,uCAAG,8BAAAC,EAAA,0DACPL,EAAeL,GADR,wBAEPG,GAAW,GAFJ,SAGgBQ,MAAM,mEAAoE,CAC7FC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAACC,QAASX,EAAeL,KAC9CiB,QAAS,CACL,OAAU,kCACV,eAAgB,sBARjB,YAGDC,EAHC,QAYMC,GAZN,iBAaHrB,EAAcsB,GACdjB,GAAW,GACXP,EAAW,cAfR,yCAiBesB,EAASG,OAjBxB,QAiBGC,EAjBH,OAkBHnB,GAAW,GACXT,GAAQ,GACS,0BAAb4B,EAAIC,MACJ3B,EAAW,+DACXE,EAAc0B,KAEd5B,EAAW,oCACXE,EAAc2B,IAzBf,4CAAH,qDA+BZ,OACI,sBAAKC,UAAU,qBAAf,UACI,cAACC,EAAA,EAAD,CACIlC,KAAMA,EACNmC,iBAAkB,IAClBC,QAAS,kBAAMnC,GAAQ,IACvBoC,aAAc,CACVC,SAAU,MACVC,WAAY,UANpB,SASI,sBAAKN,UAAU,gBAAf,UACI,qBAAKO,MAAO,GAAIC,OAAQ,GAAIC,IAAKtC,EAAYuC,IAAI,KAChDzC,OAGT,sBAAK+B,UAAU,qCAAf,UACI,qBAAKO,MAAO,GAAIC,OAAQ,GAAIC,IAAKE,EAAYD,IAAI,KACjD,kEAEHlC,GACG,qBAAKwB,UAAU,kBAAf,SACI,cAACY,EAAA,EAAD,CAAkBC,MAAM,yBAGhC,sBAAKb,UAAU,wCAAf,UACI,uBACIH,KAAK,OACLiB,YAAY,mEACZC,MAAOzC,EACP0C,SAAU,SAACC,GAAD,OAAO1C,EAAY0C,EAAEC,OAAOH,UAE1C,wBAAQI,QAASpC,EAAjB,4BAEJ,sBAAKiB,UAAU,4BAAf,UACI,8CACA,0NACI,sBAAMmB,QA1FE,WACpB,IAAM7C,EAPV,SAA0BD,GACtB,IAAMO,EALW,SAACP,GAClB,MAAM,4CAAN,OAAmDA,EAAnD,MAIa+C,CAAa/C,GACpBgD,EAAK,eAAWzC,EAAX,sBAPE,2BAOF,2BACX,MAAM,oCAAN,OAA2CyC,GAI1BC,CAAiBjD,GAAW,8CACxCkD,OAAOxD,KAAKO,KACbN,GAAQ,GACRE,EAAW,qEACXE,EAAc2B,KAqFN,uBADJ,4DAIA,sBAAKC,UAAU,cAAf,UACI,qBAAKO,MAAO,GAAIC,OAAQ,GAAIC,IAAKe,EAAUd,IAAI,KAC/C,+RCvHpBe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.73d889f8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/clover_icon.1dc15a5a.svg\";","export default __webpack_public_path__ + \"static/media/bird_icon.2fd3f500.svg\";","export default __webpack_public_path__ + \"static/media/error_icon.6d2e455a.svg\";","export default __webpack_public_path__ + \"static/media/success_icon.1221966b.svg\";","export default __webpack_public_path__ + \"static/media/warning_icon.1c2a5819.svg\";","import React, { useState } from 'react'\nimport './faucet.css'\nimport CloverIcon from '../images/clover_icon.svg'\nimport BirdIcon from '../images/bird_icon.svg'\nimport ErrorIcon from '../images/error_icon.svg'\nimport SuccessIcon from '../images/success_icon.svg'\nimport WarningIcon from '../images/warning_icon.svg'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction Faucet() {\n    const [open, setOpen] = useState(false)\n    const [message, setMessage] = useState('')\n    const [statusIcon, setStatusIcon] = useState('')\n    const [address, setAddress] = useState('0x0000000000000000000000000000000000000000')\n    const [tweetUrl, setTweetUrl] = useState('')\n    const [loading, setLoading] = useState(false);\n\n    const hashTags = 'Clover,CLV,CloverNetwork'\n    const textTemplate = (address: string) => {\n        return `Requesting Clover preview net funds into ${address} !`\n    }\n\n    function composeTweetLink(address: string) {\n        const text = textTemplate(address)\n        const query = `text=${text}&&hashtags=${hashTags}&&related=CrustNewtowrk`\n        return `https://twitter.com/intent/tweet?${query}`\n    }\n\n    const openTweetWindow = () => {\n        const tweetUrl = composeTweetLink(address || '0x0000000000000000000000000000000000000000')\n        if (!window.open(tweetUrl)) {\n            setOpen(true)\n            setMessage('Error opening browser window, please check your browser settings.')\n            setStatusIcon(ErrorIcon)\n        }\n    }\n\n    const tweetRegex = /^https?:\\/\\/twitter\\.com\\/(?:#!\\/)?(\\w+)\\/status(es)?\\/(\\d+)(\\?.*)?$/\n\n    function extractTweetId(text: string | null): string {\n        if (!text || text.length === 0 ) {\n            return ''\n        }\n        const match = text.match(tweetRegex)\n        if (match && match[3].length >0 ) {\n            return match[3]\n        }\n        return ''\n    }\n\n    const getCLV = async () => {\n        if (extractTweetId(tweetUrl)) {\n            setLoading(true)\n            const response = await fetch('https://faucet-iris-api.clover.finance/clover/api/faucet/request', {\n                method: 'POST',\n                body: JSON.stringify({tweetId: extractTweetId(tweetUrl)}),\n                headers: {\n                    'Accept': 'application/json,text/plain,*/*',\n                    'Content-Type': 'application/json',\n                },\n            })\n\n            if (response.ok) {\n                setStatusIcon(SuccessIcon)\n                setLoading(false)\n                setMessage('3 CLV got!')\n            } else {\n                const res = await response.json()\n                setLoading(false)\n                setOpen(true)\n                if (res.type === 'tweetIdAlreadyClaimed') {\n                    setMessage(\"You've reached faucet limit. Please obtain after three days\")\n                    setStatusIcon(WarningIcon)\n                } else {\n                    setMessage('Get CLV Failed. Please try later')\n                    setStatusIcon(ErrorIcon)\n                }\n            }\n        }\n    }\n\n    return (\n        <div className=\"first-page-wrapper\">\n            <Snackbar\n                open={open}\n                autoHideDuration={5000}\n                onClose={() => setOpen(false)}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n            >\n                <div className=\"alert-wrapper\">\n                    <img width={14} height={14} src={statusIcon} alt=\"\"/>\n                    {message}\n                </div>\n            </Snackbar>\n            <div className=\"first-page-content-top flex-center\">\n                <img width={36} height={36} src={CloverIcon} alt=\"\"/>\n                <span>Clover Authenticated Faucet</span>\n            </div>\n            {loading && (\n                <div className=\"loading-wrapper\" >\n                    <CircularProgress color=\"rgba(0, 0, 0, 0.8)\" />\n                </div>\n            )}\n            <div className=\"first-page-content-center flex-center\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Please paste the twitter link which contains your Clover address\"\n                    value={tweetUrl}\n                    onChange={(e) => setTweetUrl(e.target.value)}\n                />\n                <button onClick={getCLV}>Give me CLV</button>\n            </div>\n            <div className=\"first-page-content-bottom\">\n                <h4>How to fund?</h4>\n                <p>This faucet is running on the Clover preview network (Iris). To prevent malicious actors from exhausting all funds, requests are tied to Twitter social network accounts. Anyone having a\n                    <span onClick={openTweetWindow}> Twitter </span>\n                    account may request funds within the permitted limits.\n                </p>\n                <div className=\"flex-center\">\n                    <img width={30} height={26} src={BirdIcon} alt=\"\"/>\n                    <span>To request funds via Twitter, make a tweet with your Clover address pasted into the contents (surrounding text doesn't matter). Copy-paste the tweets URL into the above input box and get your CLV. Each account can get 3 CLV every three days.</span>\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Faucet;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Faucet from './faucet/faucet'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Faucet />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}